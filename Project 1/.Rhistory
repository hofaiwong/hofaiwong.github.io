labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough')
#Faceted bar plot: Inspection closure ratio by cuisine and borough
ggplot(data=inspClosByCuisineBoro, aes(x=cuisine, y=ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=inspClosByCuisineBoro, aes(x=cuisine, y=ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw()
ggplot(data=inspClosByCuisineBoro, aes(x=cuisine, y=ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw(legend.position="bottom", legend.key=element_blank())
ggplot(data=inspClosByCuisineBoro, aes(x=cuisine, y=ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw(legend.position="bottom") +
theme(legend.key=element_blank())
ggplot(data=inspClosByCuisineBoro, aes(x=cuisine, y=ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
coord_flip() +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank(), legend.position="bottom")
ggplot(data=latest, aes(x=reorder(boro, boro, function(x)-length(x)))) +
geom_bar(aes(fill=new_grade), position='dodge') +
labs(title='Restaurants by borough and latest grade',
x='Borough',
y='Restaurants') +
scale_y_continuous(limits=c(0,9000), breaks=seq(0,10000,1000)) +
scale_fill_brewer(name="Grade", palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
inspClosByCuisineBoro$boro = factor(inspClosByCuisineBoro$boro,
levels=c('Manhattan','Brooklyn','Queens','Bronx','Staten Island'))
ggplot(data=inspClosByCuisineBoro, aes(x=cuisine, y=ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank(), legend.position="bottom") +
coord_flip()
inspClosByCuisineBoro = inspectionsFiltered %>%
group_by(., cuisine, boro) %>%
summarise(.,
closures = sum(action == 'closed' | action == 'reclosed'),
reclosures = sum(action == 'reclosed'),
inspections = n(),
ratio = closures / inspections
)
#Refactor cuisines to keep same order as in previous plot
inspClosByCuisineBoro$cuisine = factor(inspClosByCuisineBoro$cuisine)
newFactor = levels(inspClosByCuisineBoro$cuisine)[order(-rank(inspClosByCuisine$ratio))]
inspClosByCuisineBoro$cuisine = factor(inspClosByCuisineBoro$cuisine,
levels=rev(newFactor))
ggplot(data=inspClosByCuisineBoro, aes(x=cuisine, y=ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank(), legend.position="bottom") +
coord_flip()
#Restaurants that were closed at least once (closures, not reclosures as part of the same inspection cycle)
reclosedByCuisine = unique(
inspectionsFiltered %>%
filter(., action == 'closed') %>%
select(., camis, cuisine, inspection.date)) %>%
group_by(., camis, cuisine) %>%
summarise(., closures = n()) %>%
group_by(., cuisine) %>%
summarise(., closed_once = sum(closures==1),
closed_more_than_once = sum(closures>1),
total_closed = n(),
ratio = closed_more_than_once / total_closed)
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank(), legend.position="bottom") +
coord_flip()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(labels = scales::percent) +
scale_fill_brewer(name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank(), legend.position="bottom") +
coord_flip()
#Faceted bar plot: Inspection closure ratio by cuisine and borough
ggplot(data=inspClosByCuisineBoro, aes(x=cuisine, y=ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by cuisine and borough', x='Cuisine', y='Inspection closure ratio') +
scale_y_continuous(labels = scales::percent) +
scale_fill_discrete(name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank(), legend.position="bottom") +
coord_flip()
ggplot(data=inspClosByCuisine, aes(x=reorder(cuisine, ratio), y=ratio)) +
geom_bar(stat='identity') +
labs(title='Inspection closure ratio by cuisine',
x='Cuisine',
y='Inspection closure ratio') +
scale_y_continuous(limits=c(0,0.03),
breaks=seq(0,3,0.005),
labels = scales::percent) +
theme_bw() +
coord_flip()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures')
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(labels = scales::percent) +
scale_y_continuous(limits=c(0,0.02),
breaks=seq(0,2,0.005),
labels = scales::percent) +
theme_bw() +
coord_flip()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(limits=c(0,0.02),
breaks=seq(0,2,0.005),
labels = scales::percent) +
theme_bw() +
coord_flip()
reclosedByCuisine = unique(
inspectionsFiltered %>%
filter(., action == 'closed') %>%
select(., camis, cuisine, inspection.date)) %>%
group_by(., camis, cuisine) %>%
summarise(., closures = n()) %>%
group_by(., cuisine) %>%
summarise(., closed_once = sum(closures==1),
closed_more_than_once = sum(closures>1),
total_closed = n(),
ratio = closed_more_than_once / total_closed)
#Bar plot: Ratio of restaurants by cuisine that were closed more than once, out of restaurants that were closed at least once
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(limits=c(0,0.02),
breaks=seq(0,2,0.005),
labels = scales::percent) +
theme_bw() +
coord_flip()
View(reclosedByCuisine)
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(limits=c(0,0.02),
breaks=seq(0,2,0.005),
labels=scales::percent) +
theme_bw() +
coord_flip()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(limits=c(0,0.02),
breaks=seq(0,0.02,0.005),
labels=scales::percent) +
theme_bw() +
coord_flip()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures')
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') + coord_flip()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') + coord_flip() + theme_bw()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') + coord_flip() + theme_bw()
scale_y_continuous(limits=c(0,0.02))
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') + coord_flip() + theme_bw()
scale_y_continuous(breaks=seq(0,0.02,0.005))
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') + coord_flip() + theme_bw()
scale_y_continuous(limits=c(0,0.02),
breaks=seq(0,0.02,0.005))
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') + coord_flip() + theme_bw()
scale_y_continuous(labels=scales::percent) +
theme_bw() +
coord_flip()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(labels=scales::percent) +
theme_bw() +
coord_flip()
ggplot (data = reclosedByBoro, aes (x = reorder(boro, -ratio), y = ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
labs(title='Repeat closure ratio by borough',
x='Borough',
y='Repeat closure ratio') +
scale_y_continuous(limits=c(0,0.12), labels = scales::percent) +
scale_fill_brewer(palette = 'Set1', name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank())
ggplot (data = reclosedByBoro, aes (x = reorder(boro, -ratio), y = ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
labs(title='Repeat closure ratio by borough',
x='Borough',
y='Repeat closure ratio') +
scale_y_continuous(labels = scales::percent) +
scale_fill_brewer(palette = 'Set1', name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank())
ggplot (data = reclosedByBoro, aes (x = reorder(boro, -ratio), y = ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
labs(title='Repeat closure ratio by borough',
x='Borough',
y='Repeat closure ratio') +
scale_y_continuous(limits=c(0,0.12), labels = scales::percent) +
scale_fill_brewer(palette = 'Set1', name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank())
ggplot (data = reclosedByBoro, aes (x = reorder(boro, -ratio), y = ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
labs(title='Repeat closure ratio by borough',
x='Borough',
y='Repeat closure ratio') +
scale_y_continuous(limits=c(0,0.12),
breaks=seq(0,0.12,0.02),
labels = scales::percent) +
scale_fill_brewer(palette = 'Set1', name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank())
ggplot (data = reclosedByBoro, aes (x = reorder(boro, -ratio), y = ratio)) +
geom_bar(stat='identity', aes(fill=boro)) +
labs(title='Repeat closure ratio by borough',
x='Borough',
y='Repeat closure ratio') +
scale_y_continuous(limits=c(0,0.12),
breaks=seq(0,0.12,0.02),
labels = scales::percent) +
scale_fill_brewer(palette = 'Set1', name = 'Borough') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(labels=scales::percent) +
theme_bw() +
coord_flip()
ggplot(data = reclosedByCuisine, aes (x = reorder(cuisine, ratio), y = ratio)) +
geom_bar(stat='identity') +
labs(title='Ratio of repeat closures by cuisine',
x='Cuisine',
y='Ratio of repeat closures') +
scale_y_continuous(limits=c(0,0.2),
breaks=seq(0,0.2,0.05),
labels=scales::percent) +
theme_bw() +
coord_flip()
#Trend of average scores by month and borough
trendScore = inspections %>%
mutate(., month=month(inspection.date)) %>%
group_by(., month, boro) %>%
summarise(., avg = mean(score))
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by inspection month and borough',
x='Inspection month',
y='Average score') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1')
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by inspection month and borough',
x='Inspection month',
y='Average score') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw()
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by inspection month and borough',
x='Inspection month',
y='Average score') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
trendClosures = inspections %>%
mutate(., month=month(inspection.date)) %>%
group_by(., month, boro) %>%
summarise(.,
closures = sum(action == 'closed' | action == 'reclosed'),
inspections = n(),
ratio = closures / inspections
)
ggplot(data=trendClosures, aes(x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Inspection month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1')
ggplot(data=trendClosures, aes(x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Inspection month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_y_continuous(labels=scales::percent) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
#scale_y_continuous(labels=scales::percent) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(10,20)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(12,18)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScore, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendClosures, aes(x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendClosures, aes(x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_y_continuous(limits=c(0,0.4),
breaks=seq(0,0.4,0.05),
labels=scales::percent) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendClosures, aes(x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_y_continuous(limits=c(0,0.04),
breaks=seq(0,0.04,0.01),
labels=scales::percent) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendClosures, aes(x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_y_continuous(limits=c(0.005,0.035),
breaks=seq(0,0.035,0.005),
labels=scales::percent) +
scale_color_brewer(name='Borough', palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
